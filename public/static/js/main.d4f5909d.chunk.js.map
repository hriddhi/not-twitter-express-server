{"version":3,"sources":["redux/ActionCreator.js","redux/ActionTypes.js","components/FeedComponent.js","components/SuggestionComponet.js","components/ProfileComponent.js","components/TweetComponent.js","components/MainComponent.js","components/LoginComponent.js","components/RegistrationComponent.js","components/Router.js","redux/posts.js","redux/comments.js","redux/registration.js","redux/login.js","redux/tweet.js","redux/session.js","redux/profile.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["url","loginLoading","type","loginSuccess","loginFailed","err","payload","response","createSession","data","deleteSession","registerLoading","registerSuccess","registerFailed","fetchProfileLoading","fetchProfileSuccess","res","fetchProfileFailed","fetchProfileRepliesLoading","fetchProfileRepliesSuccess","fetchProfileRepliesFailed","fetchProfileLikesLoading","fetchProfileLikesSuccess","fetchProfileLikesFailed","_fetchUserDetailsLoading","_fetchUserDetailsSuccess","followUser","id","dispatch","getState","axios","post","headers","session","token","then","console","log","followSuccess","catch","getUserSuggestion","get","getUserSuggestion_","postUserSuggestion_","postLoading","postFailed","errmess","postSuccess","posts","commentsLoading","_id","commentsFailed","commentsSuccess","comments","postTweetLocal","postTweetSuccess","postTweetFailed","postCommentLoading","postCommentSuccess","postCommentFailed","postLikeLoading","postLikeSuccess","postId","postLikeFailed","fetchTweet","tweetLoading","tweetSuccess","tweetFailed","tweet","__postCommentLoading","__postCommentFailed","__postCommentSuccess","__postLikeLoading","__postLikeSuccess","__postLikeFailed","required","val","length","Post","props","state","tweetCharCount","errorVisible","image","file","handleTweetSubmit","bind","handleImageChange","countChars","event","this","setState","produce","draft","target","value","URL","createObjectURL","files","values","user","slice","formData","FormData","append","postTweet","Card","style","margin","boxShadow","border","CardBody","className","model","onSubmit","Image","roundedCircle","src","profile_picture","alt","maxWidth","width","CardTitle","marginLeft","marginBottom","display","name","username","reset","backgroundColor","color","position","padding","marginTop","right","onClick","Row","textarea","onChange","validators","CardFooter","height","opacity","float","strokeWidth","maxValue","text","styles","textSize","show","messages","React","Component","Feed","popoverOpen","selectedPost","imgOpen","imgSrc","isLoading","fetchPosts","undefined","fetchComments","postLike","postComment","comment","map","key","animation","animationName","Radium","keyframes","fadeInDown","ListGroupItem","borderRadius","history","push","Date","getTime","createdAt","fromNow","format","CardText","handleCommentSubmit","class","InputGroup","borderTopRightRadius","borderBottomRightRadius","paddingTop","paddingBottom","ListGroup","Fragment","Spinner","variant","errMess","Navbar","borderBottomWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","NavbarBrand","href","feed","repliedTo","split","to","textAlign","picture","rounded","maxHeight","OverlayTrigger","placementweett","delay","hide","overlay","Tooltip","handleTweetLike","paddingRight","like","findIndex","userId","onPostSelect","renderComment","renderNavbar","minHeight","fadeIn","isPosting","left","top","Button","size","imgs","isOpen","onClose","withRouter","connect","Suggest","user_suggestion","borderWidth","postUserSuggestion","CardHeader","renderSuggestion","background","Profile","selected","setShow","showing","isEditing","fetchProfile","match","params","backgroundSize","backgroundImage","bottom","zIndex","current","concat","followers","includes","bio","cursor","fetchUserDetails","following","location","link","dob","joined","fontSize","fontWeight","placeholder","renderProfile","renderEdit","replies","fetchProfileReplies","likes","fetchProfileLikes","Modal","onHide","centered","fetchUser","fetchedUser","Header","closeButton","Title","Body","profile","Tweet","__postComment","__postLike","Main","logoutUser","renderSidebar","exact","path","component","renderFooter","login","postID","Login","replace","loginUser","handleLogin","password","Registration","email","firstname","lastname","registerUser","encType","handleRegistration","for","rows","borderStyle","Footer","Router","Posts","action","unshift","i","Comments","Register","isRegistering","status","statusText","commentLoading","likeLoading","commentErr","likeErr","Session","temp","filter","reverse","persistConfig","storage","whitelist","blacklist","transforms","expireReducer","expireSeconds","store","createStore","persistReducer","combineReducers","register","applyMiddleware","thunk","logger","App","persistStore","Boolean","window","hostname","enableAllPlugins","Moment","startPooledTimer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d4f5909d.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport axios from 'axios';\r\n\r\nconst url = 'https://nottwitterapp.herokuapp.com/';\r\n\r\nexport const loginUser = (user) => (dispatch) => {\r\n    dispatch(loginLoading());\r\n\r\n    axios.post(url + '/login', {\r\n        username: user.username,\r\n        password: user.password\r\n    })\r\n    .then(res => {\r\n        dispatch(loginSuccess());\r\n        dispatch(createSession(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(loginFailed(err));\r\n    });\r\n};\r\n\r\nexport const loginLoading = () => ({\r\n    type: ActionTypes.LOGIN_USER\r\n});\r\n\r\nexport const loginSuccess = () => ({\r\n    type: ActionTypes.LOGIN_SUCCESS\r\n});\r\n\r\nexport const loginFailed = (err) => ({\r\n    type: ActionTypes.LOGIN_FAILED,\r\n    payload: err.response\r\n});\r\n\r\nexport const createSession = (data) => ({\r\n    type: ActionTypes.CREATE_SESSION,\r\n    payload: data\r\n})\r\n\r\n//================================================\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(deleteSession());\r\n};\r\n\r\nexport const deleteSession = () => ({\r\n    type: ActionTypes.DELETE_SESSION\r\n})\r\n\r\n//================================================\r\n\r\nexport const registerUser = (user) => (dispatch) => {\r\n    dispatch(registerLoading());\r\n\r\n    console.log(...user);\r\n\r\n    axios.post(url + '/signup', user)\r\n    .then(res => {\r\n        dispatch(registerSuccess());\r\n    })\r\n    .catch(err => {\r\n        dispatch(registerFailed());\r\n    });\r\n};\r\n\r\nexport const registerLoading = () => ({\r\n    type: ActionTypes.REGISTER_USER\r\n});\r\n\r\nexport const registerSuccess = () => ({\r\n    type: ActionTypes.REGISTER_SUCCESS\r\n});\r\n\r\nexport const registerFailed = () => ({\r\n    type: ActionTypes.REGISTER_FAILED\r\n});\r\n\r\n//================================================\r\n\r\nexport const fetchProfile = (username) => (dispatch, getState) => {\r\n    dispatch(fetchProfileLoading());\r\n\r\n    axios.get(url + '/profile/' + username,  {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(fetchProfileSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(fetchProfileFailed(err));\r\n    });\r\n}\r\n\r\nexport const fetchProfileReplies = (username) => (dispatch, getState) => {\r\n    dispatch(fetchProfileRepliesLoading());\r\n\r\n    axios.get(url + '/profile/replies/' + username,  {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(fetchProfileRepliesSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(fetchProfileRepliesFailed(err));\r\n    });\r\n}\r\n\r\nexport const fetchProfileLikes = (username) => (dispatch, getState) => {\r\n    dispatch(fetchProfileLikesLoading());\r\n\r\n    axios.get(url + '/profile/likes/' + username,  {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(fetchProfileLikesSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(fetchProfileLikesFailed(err));\r\n    });\r\n}\r\n\r\nexport const fetchProfileLoading = () => ({\r\n    type: ActionTypes.PROFILE_LOADING\r\n});\r\n\r\nexport const fetchProfileSuccess = (res) => ({\r\n    type: ActionTypes.PROFILE_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const fetchProfileFailed = (err) => ({\r\n    type: ActionTypes.PROFILE_FAILED\r\n});\r\n\r\nexport const fetchProfileRepliesLoading = () => ({\r\n    type: ActionTypes.PROFILE_REPLIES_LOADING\r\n});\r\n\r\nexport const fetchProfileRepliesSuccess = (res) => ({\r\n    type: ActionTypes.PROFILE_REPLIES_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const fetchProfileRepliesFailed = (err) => ({\r\n    type: ActionTypes.PROFILE_REPLIES_FAILED\r\n});\r\n\r\nexport const fetchProfileLikesLoading = () => ({\r\n    type: ActionTypes.PROFILE_LIKES_LOADING\r\n});\r\n\r\nexport const fetchProfileLikesSuccess = (res) => ({\r\n    type: ActionTypes.PROFILE_LIKES_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const fetchProfileLikesFailed = (err) => ({\r\n    type: ActionTypes.PROFILE_LIKES_FAILED\r\n});\r\n\r\n//====================================================\r\n\r\nexport const fetchUserDetails = (user) => (dispatch, getState) => {\r\n    dispatch(_fetchUserDetailsLoading());\r\n\r\n    axios.post(url + '/user', {user}, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token,\r\n            'user': user\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch(_fetchUserDetailsSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\nexport const _fetchUserDetailsLoading = () => ({\r\n    type: ActionTypes.FETCH_USER_DETAIL_LOADING\r\n});\r\n\r\nexport const _fetchUserDetailsSuccess = (res) => ({\r\n    type: ActionTypes.FETCH_USER_DETAIL_SUCCESS,\r\n    payload: res\r\n});\r\n\r\n//====================================================\r\n\r\nexport const followUser = (id) => (dispatch, getState) => {\r\n    axios.post(url + '/user/follows/' + id, null, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch(followSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n        //dispatch(postFailed(err));\r\n    });\r\n}\r\n\r\nexport const followSuccess = (res) => ({\r\n    type: ActionTypes.FOLLOW_USER,\r\n    payload: res\r\n});\r\n\r\n//====================================================\r\n\r\nexport const getUserSuggestion = () => (dispatch, getState) => {\r\n    \r\n    axios.get(url + '/user/find', {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch(getUserSuggestion_(res.data));\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n        //dispatch(postFailed(err));\r\n    });\r\n}\r\n\r\nexport const getUserSuggestion_ = (res) => ({\r\n    type: ActionTypes.FETCH_USER_SUGGESTION,\r\n    payload: res\r\n});\r\n\r\n//======================================================\r\n\r\nexport const postUserSuggestion = (id) => (dispatch, getState) => {\r\n    \r\n    axios.post(url + '/user/follows/' + id, null, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch(postUserSuggestion_(id));\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n        //dispatch(postFailed(err));\r\n    });\r\n}\r\n\r\nexport const postUserSuggestion_ = (res) => ({\r\n    type: ActionTypes.POST_USER_SUGGESTION,\r\n    payload: res\r\n});\r\n//====================================================\r\n\r\nexport const fetchPosts = () => (dispatch, getState) => {\r\n    dispatch(postLoading(true));\r\n\r\n    axios.get(url + '/post/',  {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(postSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(postFailed(err));\r\n    });\r\n}\r\n\r\nexport const postLoading = () => ({\r\n    type: ActionTypes.POST_LOADING\r\n});\r\n\r\nexport const postFailed = (errmess) => ({\r\n    type: ActionTypes.POST_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const postSuccess = (posts) => ({\r\n    type: ActionTypes.POST_SUCCESS,\r\n    payload: posts\r\n});\r\n\r\n//===============================================================\r\n\r\nexport const fetchComments = (_id) => (dispatch, getState) => {\r\n    dispatch(commentsLoading(_id));\r\n\r\n    axios.get(url + '/post/comment/' + _id,  {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch(commentsSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(commentsFailed(err));\r\n    });\r\n}\r\n\r\nexport const commentsLoading = (_id) => ({\r\n    type: ActionTypes.COMMENT_LOADING,\r\n    id: _id\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENT_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const commentsSuccess = (comments) => ({\r\n    type: ActionTypes.COMMENT_SUCCESS,\r\n    payload: comments\r\n});\r\n\r\n//===============================================================\r\n\r\nexport const postTweet = (tweet) => (dispatch, getState) => {\r\n\r\n    dispatch(postTweetLocal());\r\n\r\n    console.log(...tweet);\r\n    \r\n    axios.post(url + '/post', tweet, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(postTweetSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(postTweetFailed(err));\r\n    });\r\n}\r\n\r\nexport const postTweetLocal = () => ({\r\n    type: ActionTypes.POST_TWEET\r\n});\r\n\r\nexport const postTweetSuccess = (res) => ({\r\n    type: ActionTypes.POST_TWEET_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const postTweetFailed = (errmess) => ({\r\n    type: ActionTypes.POST_TWEET_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n//===============================================================\r\n\r\nexport const postComment = (postId, username, comment) => (dispatch, getState) => {\r\n\r\n    dispatch(postCommentLoading());\r\n\r\n    axios.post(url + '/post/comment/' + postId, { comment, username }, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(postCommentSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        dispatch(postCommentFailed(err));\r\n    });\r\n}\r\n\r\nexport const postCommentLoading = () => ({\r\n    type: ActionTypes.POST_COMMENT_LOADING\r\n});\r\n\r\nexport const postCommentSuccess = (res) => ({\r\n    type: ActionTypes.POST_COMMENT_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const postCommentFailed = (errmess) => ({\r\n    type: ActionTypes.POST_COMMENT_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n//==================================================\r\n\r\nexport const postLike = (postId) => (dispatch, getState) => {\r\n\r\n    dispatch(postLikeLoading());\r\n\r\n    axios.post(url + '/post/like/' + postId, null , {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(postLikeSuccess(res.data, postId));\r\n    })\r\n    .catch(err => {\r\n        dispatch(postLikeFailed(err));\r\n    });\r\n}\r\n\r\nexport const postLikeLoading = () => ({\r\n    type: ActionTypes.POST_LIKE_LOADING\r\n});\r\n\r\nexport const postLikeSuccess = (res, postId) => ({\r\n    type: ActionTypes.POST_LIKE_SUCCESS,\r\n    payload: res,\r\n    postId: postId\r\n});\r\n\r\nexport const postLikeFailed = (errmess) => ({\r\n    type: ActionTypes.POST_LIKE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n//=================================================\r\n\r\nexport const fetchTweet = (_id) => (dispatch, getState) => {\r\n    dispatch(tweetLoading());\r\n\r\n    axios.get(url + '/tweet/' + _id,   {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch(tweetSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n        dispatch(tweetFailed(err));\r\n    });\r\n}\r\n\r\nexport const tweetLoading = () => ({\r\n    type: ActionTypes.__FETCH_TWEET_LOADING\r\n});\r\n\r\nexport const tweetFailed = (errmess) => ({\r\n    type: ActionTypes.__FETCH_TWEET_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const tweetSuccess = (tweet) => ({\r\n    type: ActionTypes.__FETCH_TWEET_SUCCESS,\r\n    payload: tweet\r\n});\r\n\r\nexport const __postComment = (_id, comment) => (dispatch, getState) => {\r\n    dispatch(__postCommentLoading());\r\n\r\n    axios.post(url + '/tweet/comment/' + _id, {comment},  {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch(__postCommentSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n        dispatch(__postCommentFailed(err));\r\n    });\r\n}\r\n\r\nexport const __postCommentLoading = () => ({\r\n    type: ActionTypes.__COMMENT_LOADING\r\n});\r\n\r\nexport const __postCommentFailed = (errmess) => ({\r\n    type: ActionTypes.__COMMENT_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const __postCommentSuccess = (tweet) => ({\r\n    type: ActionTypes.__COMMENT_SUCCESS,\r\n    payload: tweet\r\n});\r\n\r\n//===============================================\r\n\r\nexport const __postLike = (postId) => (dispatch, getState) => {\r\n    dispatch(__postLikeLoading());\r\n\r\n    axios.post(url + '/tweet/like/' + postId, null , {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getState().session.token\r\n        }\r\n    })\r\n    .then(res => {\r\n        dispatch(__postLikeSuccess(res.data, postId));\r\n    })\r\n    .catch(err => {\r\n        dispatch(__postLikeFailed(err));\r\n    });\r\n}\r\n\r\nexport const __postLikeLoading = () => ({\r\n    type: ActionTypes.__LIKE_LOADING\r\n});\r\n\r\nexport const __postLikeSuccess = (res, postId) => ({\r\n    type: ActionTypes.__LIKE_SUCCESS,\r\n    payload: res,\r\n    postId: postId\r\n});\r\n\r\nexport const __postLikeFailed = (errmess) => ({\r\n    type: ActionTypes.__LIKE_FAILED,\r\n    payload: errmess\r\n});","export const REGISTER_USER = \"REGISTER_USER\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\r\n\r\nexport const CREATE_SESSION = \"CREATE_SESSION\";\r\nexport const DELETE_SESSION = \"DELETE_SESSION\";\r\n\r\nexport const FOLLOW_USER = \"FOLLOW_USER\";\r\nexport const FETCH_USER_SUGGESTION = 'FETCH_USER_SUGGESTION'\r\nexport const POST_USER_SUGGESTION = 'POST_USER_SUGGESTION';\r\n\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\n\r\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\r\nexport const PROFILE_SUCCESS = \"PROFILE_SUCCESS\";\r\nexport const PROFILE_FAILED = \"PROFILE_FAILED\";\r\n\r\nexport const FETCH_USER_DETAIL_LOADING = \"FETCH_USER_DETAIL_LOADING\";\r\nexport const FETCH_USER_DETAIL_SUCCESS = \"FETCH_USER_DETAIL_SUCCESS\";\r\n\r\nexport const PROFILE_REPLIES_LOADING = \"PROFILE_REPLIES_LOADING\";\r\nexport const PROFILE_REPLIES_SUCCESS = \"PROFILE_REPLIES_SUCCESS\";\r\nexport const PROFILE_REPLIES_FAILED = \"PROFILE_REPLIES_FAILED\";\r\n\r\nexport const PROFILE_LIKES_LOADING = \"PROFILE_LIKES_LOADING\";\r\nexport const PROFILE_LIKES_SUCCESS = \"PROFILE_LIKES_SUCCESS\";\r\nexport const PROFILE_LIKES_FAILED = \"PROFILE_LIKES_FAILED\";\r\n\r\nexport const POST_LOADING = 'POST_LOADING';\r\nexport const POST_FAILED = 'POST_FAILED';\r\nexport const POST_SUCCESS = 'POST_SUCCESS';\r\n\r\nexport const COMMENT_LOADING = 'COMMENT_LOADING';\r\nexport const COMMENT_FAILED = 'COMMENT_FAILED';\r\nexport const COMMENT_SUCCESS = 'COMMENT_SUCCESS'; \r\n\r\nexport const POST_TWEET = 'POST_TWEET';\r\nexport const POST_TWEET_LOADING = 'POST_TWEET_LOADING';\r\nexport const POST_TWEET_SUCCESS = 'POST_TWEET_SUCCESS';\r\nexport const POST_TWEET_FAILED = 'POST_TWEET_FAILED';\r\n\r\nexport const POST_COMMENT = 'POST_COMMENT';\r\nexport const POST_COMMENT_LOADING = 'POST_COMMENT_LOADING';\r\nexport const POST_COMMENT_SUCCESS = 'POST_COMMENT_SUCCESS';\r\nexport const POST_COMMENT_FAILED = 'POST_COMMENT_FAILED';\r\n\r\nexport const POST_LIKE_LOADING = 'POST_LIKE_LOADING';\r\nexport const POST_LIKE_SUCCESS = 'POST_LIKE_SUCCESS';\r\nexport const POST_LIKE_FAILED = 'POST_LIKE_FAILED';\r\n\r\nexport const __FETCH_TWEET_LOADING = '__FETCH_TWEET_LOADING';\r\nexport const __FETCH_TWEET_FAILED = '__FETCH_TWEET_FAILED';\r\nexport const __FETCH_TWEET_SUCCESS = '__FETCH_TWEET_SUCCESS';\r\n\r\nexport const __POST_LOADING = '__POST_LOADING';\r\nexport const __POST_FAILED = '__POST_FAILED';\r\nexport const __POST_SUCCESS = '__POST_SUCCESS';\r\n\r\nexport const __COMMENT_LOADING = '__COMMENT_LOADING';\r\nexport const __COMMENT_FAILED = '__COMMENT_FAILED';\r\nexport const __COMMENT_SUCCESS = '__COMMENT_SUCCESS';\r\n\r\nexport const __LIKE_LOADING = '__LIKE_LOADING';\r\nexport const __LIKE_FAILED = '__LIKE_FAILED';\r\nexport const __LIKE_SUCCESS = '__LIKE_SUCCESS';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport produce from 'immer';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport  { Row, Card, CardText, CardBody, CardTitle, Button, CardFooter, ListGroup, ListGroupItem,\r\n        InputGroup, Navbar, NavbarBrand } from 'reactstrap';\r\nimport { OverlayTrigger, Tooltip, Image, Spinner } from 'react-bootstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { fadeInDown, fadeIn } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport { fetchPosts, fetchComments, fetchTweet } from '../redux/ActionCreator';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport ImgsViewer from 'react-images-viewer';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst required = (val) => val && val.length;\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    fetchTweet: (id) => dispatch(fetchTweet(id)),\r\n    fetchPosts: () => dispatch(fetchPosts()),\r\n    fetchComments: (id) => dispatch(fetchComments(id))\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.posts,\r\n        comments: state.comments,\r\n        user: state.session.user\r\n    }\r\n};\r\n\r\nclass Post extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            tweetCharCount: 0,\r\n            errorVisible: false,\r\n            image: null,\r\n            file: null\r\n        }\r\n\r\n        this.handleTweetSubmit = this.handleTweetSubmit.bind(this);\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n        this.countChars = this.countChars.bind(this);\r\n    }\r\n\r\n    countChars(event){\r\n        this.setState(\r\n            produce(draft => {\r\n                draft.tweetCharCount = event.target.value.length\r\n            })\r\n        )\r\n    }\r\n\r\n    handleImageChange(event) {\r\n        this.setState({\r\n          image: URL.createObjectURL(event.target.files[0]),\r\n          file: event.target.files[0]\r\n        })\r\n    }\r\n\r\n    handleTweetSubmit(values, user){\r\n        var tweet = values.tweet.slice(0,256);\r\n\r\n        var formData = new FormData();\r\n        formData.append('tweet', tweet);\r\n        if(this.state.file !== null)\r\n            formData.append('image', this.state.file);\r\n\r\n        this.props.postTweet(formData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{margin:10, boxShadow: \"0 2px 4px 0\", border: \"none\"}}>\r\n                <CardBody className=\"p-0\">\r\n                    <LocalForm model=\"post\" onSubmit={(values) => this.handleTweetSubmit(values, this.props.user)}>\r\n                        <div className=\"row m-0 pt-2 pl-2 pr-2 pb-0\">\r\n                            <div className=\"d-none d-md-inline d-lg-inline m-0 mt-1 p-0\">\r\n                                <Image roundedCircle src={this.props.user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 40}} />\r\n                            </div>\r\n                            <div className=\"container ml-3\" style={{width: 90+\"%\"}}>\r\n                                <CardTitle style={{marginLeft: -14, marginBottom: 8, display: \"inline\"}}><strong>{this.props.user.name}</strong><span className=\"font-weight-light\"> @{this.props.user.username}</span></CardTitle>\r\n                                {this.state.tweetCharCount ? <Control.reset style={{backgroundColor: \"rgb(255, 255, 255, 0)\", color: \"#000\", position: \"absolute\", border: \"none\", padding: 0, marginTop: -4, right: 16}} model=\"post\" type=\"reset\"><i style={{padding: 5}} onClick={()=> {this.setState({tweetCharCount: 0})}} className=\"fa fa-times-circle\"></i></Control.reset> : null }\r\n                                <Row className=\"form-group\">\r\n                                    <Control.textarea onChange={this.countChars} model=\".tweet\" name=\"tweet\" id=\"tweet\" className=\"form-control\" validators={{required}}/>\r\n                                </Row>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <CardFooter style={{backgroundColor: \"#78e2ff\"}} className=\"p-1 m-0\">\r\n                            <button className=\"btn btn-sm btton_feed pl-2 pr-2\" style={{backgroundColor: \"rgb(255, 255, 255, 0.4)\"}} onClick={() => {this.setState({ errorVisible: 'Required' })}} type=\"submit\"><strong>Post</strong></button> \r\n                            <button type=\"button\" className=\"btn btn-sm btton_feed p-0 ml-1 pl-2 pr-2\" style={{height: \"30px\", backgroundColor: \"rgb(255, 255, 255, 0.4)\"}}>\r\n                                <Control.file onChange={this.handleImageChange} model=\".image\" name=\"image\" id=\"image\" className=\"form-control p-0\" style={{opacity: 0, height: 30, width: 30, position: \"absolute\", marginTop: -5, marginLeft: -9}}/>\r\n                                <small><i className=\"fa fa-image\"></i></small> {this.state.file !== null ? this.state.file.name : null}\r\n                            </button>\r\n                            \r\n                            <span className=\"font-weight-light small m-1\" style={{float: \"right\"}}>\r\n                                { this.state.tweetCharCount ? <div style={{height: 25, width: 25}}><CircularProgressbar strokeWidth={16} maxValue={256} value={this.state.tweetCharCount} text={this.state.tweetCharCount} styles={{textSize: '30px'}} /></div> : null} <strong><Errors className=\"text-danger\" model=\".tweet\" show=\"touched\" messages={{required: this.state.errorVisible}} /></strong> \r\n                            </span>\r\n                        </CardFooter> \r\n                    </LocalForm>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nclass Feed extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            popoverOpen: true,\r\n            selectedPost: null,\r\n            imgOpen: false,\r\n            imgSrc: null\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        if(!this.props.posts.isLoading)\r\n            this.props.fetchPosts();\r\n    }\r\n\r\n    onPostSelect(post){\r\n        if(this.props.comments.comments[post._id] === undefined && !this.props.comments.isLoading)\r\n            this.props.fetchComments(post._id + '$' + post.user.username);\r\n        \r\n        if(this.state.selectedPost === post._id)\r\n            this.setState({ selectedPost: null });\r\n        else\r\n            this.setState({ selectedPost: post._id });\r\n    }\r\n\r\n    handleTweetLike(post, user){\r\n        this.props.postLike(post._id);\r\n    }\r\n\r\n    handleCommentSubmit(values, post){\r\n        this.props.postComment(post._id, post.user.username, values.comment.slice(0,256));\r\n        //this.props.feedScrollFunc(window.pageYOffset);\r\n    }\r\n\r\n    renderComment(post) {\r\n            var comments = null;\r\n            if(this.props.comments.comments[post._id] !== undefined){\r\n                comments = this.props.comments.comments[post._id].map((comment) => {\r\n                    return (    \r\n                        <StyleRoot>\r\n                            <div key={comment._id} style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeInDown, 'fadeInDown')}}>\r\n                                <ListGroupItem className=\"comment p-2 mb-1 mt-1\" style={{border: \"none\", borderRadius: 10, boxShadow: \"0px 0px 0px white\"}}>\r\n                                    <div onClick={() => {this.props.fetchTweet(comment._id+'$'+comment.user.username); this.props.history.push('/tweet') }} className=\"row m-0\">\r\n                                        <div className=\"d-none d-xs-inline d-md-inline d-lg-inline m-0 mt-1 p-0\">\r\n                                            <Image roundedCircle src={comment.user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 40}} />\r\n                                        </div>\r\n                                        <div className=\"container ml-3 p-0\" style={{width: 90+\"%\"}}>\r\n                                            <CardTitle className=\"mb-1 d-inline\"><strong>{comment.user.name} </strong><span className=\"font-weight-light\">@{comment.user.username}</span></CardTitle>\r\n                                            <small className=\"font-weight-light d-inline\" style={{position: \"absolute\", right: 16}}>{ (new Date().getTime() - new Date(comment.createdAt).getTime())/(1000*3600*24) < 1 ? <Moment fromNow>{comment.createdAt}</Moment> : <Moment format=\"LT D, MMM\">{comment.createdAt}</Moment>}</small>\r\n                                            <CardText>{comment.tweet}</CardText>\r\n                                        </div>\r\n                                    </div>\r\n                                </ListGroupItem>    \r\n                            </div>\r\n                        </StyleRoot>\r\n                    );\r\n                });\r\n            }\r\n        \r\n        return (\r\n            <div key={post._id+\"_comment_section\"} className=\"pl-1 pr-1 pb-1 pt-0\">\r\n                <LocalForm model={post._id+\"comment\"} onSubmit={(values) => this.handleCommentSubmit(values, post)}>\r\n                    <div class=\"container commentbar mt-2\" style={{border: \"none\", borderRadius: 30, padding: 0, backgroundColor: \"rgb(255, 255, 255, 0.7)\"}} >\r\n                        <InputGroup>\r\n                            <Control.text model=\".comment\" name=\"comment\" id=\"comment\" className=\"search-query form-control noHover\" style={{border: \"none\", borderRadius: 30, marginLeft: 0, backgroundColor: \"rgb(255, 255, 255, 0)\"}}/>\r\n                            <div style={{backgroundColor: \"rgb(255, 255, 255, 0)\", borderTopRightRadius:\"30px\", borderBottomRightRadius:\"30px\"}}>\r\n                                <span><Control.reset className=\"btn bttnx btn-sm block pl-2 pr-2\" style={{border: \"none\", paddingTop: 9, paddingBottom: 9}} model={post._id+\"comment\"} type=\"reset\"><i className=\"fa fa-times-circle\"></i></Control.reset></span>\r\n                                <span><button type=\"submit\" class=\"btn bttn btn-xs pl-2 pr-2 mr-2\" style={{border: \"none\", paddingTop: 6, paddingBottom: 6}}><i class=\"fa fa-paper-plane\"></i></button> </span>\r\n                            </div>\r\n                        </InputGroup>\r\n                    </div>\r\n                </LocalForm>\r\n                <ListGroup className=\"pt-1\"> \r\n                {   \r\n                    (() => {\r\n                        if(this.props.comments[post._id] === undefined && this.props.comments.isLoading){\r\n                            return (\r\n                                <React.Fragment>\r\n                                    <div style={{height: 100}}>\r\n                                        <div style={{width: 50, height: 50, paddingTop: 32,  margin: \"0 auto\"}}>\r\n                                            <Spinner animation=\"border\" variant=\"dark\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )\r\n                        } else if(this.props.comments[post._id] === undefined && this.props.comments.errMess){\r\n                            return <h4>{this.props.posts.errMess}</h4>;\r\n                        } else {\r\n                            return comments;\r\n                        }\r\n                    })()\r\n                }\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderNavbar() {\r\n        return (\r\n            <Navbar color=\"light\" style={{border: \"solid\", borderBottomWidth: 1, borderTopWidth: 0, borderLeftWidth: 0, borderRightWidth: 0, borderColor: \"#cfcfcf\"}}>\r\n                <NavbarBrand href=\"/\" className=\"font-weight-bold\">Home</NavbarBrand>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const feed = this.props.posts.posts.map((post) => {\r\n            return (\r\n                <div key={post._id} style={{width: 100+\"%\"}}>\r\n                    <Card style={{margin: 10, boxShadow: \"0 2px 4px 0\", border: \"none\"}}>\r\n                        { post.repliedTo !== null ? <div style={{marginBottom: -4}}><p style={{color: \"#737373\"}} className=\"p-0 ml-2 m-0 font-weight-light\"><small><span className=\"fa fa-reply\"></span> Replied to <strong>@{post.repliedTo.split('$')[1]}</strong></small></p></div> : null }\r\n                        <CardBody className=\"p-0\">\r\n                            <div className=\"row m-0 p-2\">\r\n                                <div className=\"d-none d-md-inline d-lg-inline m-0 p-0\">\r\n                                    <Image roundedCircle src={post.user.profile_picture} alt=\"profile\" className=\"img-thumbnail mt-1\" style={{maxWidth: 40}} />\r\n                                </div>\r\n                                <div className=\"container ml-3 p-0\" style={{width: 90+\"%\"}}>\r\n                                    <NavLink style={{color: \"black\"}} to={\"/profile/\" + post.user.username }><CardTitle className=\"mb-1 d-inline\"><strong>{post.user.name} </strong><span className=\"font-weight-light\">@{post.user.username}</span> </CardTitle></NavLink>\r\n                                    <small className=\"font-weight-light d-inline\" style={{position: \"absolute\", right: 16}}>{ (new Date().getTime() - new Date(post.createdAt).getTime())/(1000*3600*24) < 1 ? <Moment fromNow>{post.createdAt}</Moment> : <Moment format=\"LT D, MMM\">{post.createdAt}</Moment>}</small>\r\n                                    <CardText style={{textAlign: \"justify\"}}>{post.tweet}</CardText>\r\n                                    \r\n                                </div>\r\n                                { post.picture !== null ? <div className=\"container mt-1\"><Image onClick={()=> this.setState({imgSrc: post.picture, imgOpen: true})} rounded src={post.picture} alt=\"post\" className=\"mx-auto d-block\" style={{maxWidth: 400, maxHeight: 400}}/></div> : null }\r\n                            </div>\r\n                            \r\n                            <CardFooter style={{backgroundColor: \"#b8f2fc\"}} className=\"p-1 m-0\">\r\n                                <OverlayTrigger placementweett=\"top\" delay={{ show: 100, hide: 100 }} overlay={\r\n                                    <Tooltip id=\"button-tooltip\"> \r\n                                    { \r\n                                        (() => { \r\n                                            if(post['like'].length === 0) \r\n                                                return 'No Likes'; \r\n                                            else\r\n                                                return post['like'].slice(0,5).map((user) => <p className=\"p-0 m-0\">{user.username}</p>);\r\n                                        })()\r\n                                    }\r\n                                    {post['like'].length !== 0 && post['like'].length > 5 ? <p className=\"p-0 m-0\">and {post['like'].length - 5} more ...</p> : null}\r\n                                    </Tooltip>}>\r\n                                    <button className=\"btn btn-sm btton_feed mr-1\" style={{backgroundColor: \"rgb(255, 255, 255, 0.4)\"}} type=\"button\"  onClick={() => this.handleTweetLike(post, this.props.user)}>\r\n                                        <span style={{paddingRight: 4, color: (() =>{ if(post['like'].length !== 0 && post.like.findIndex((user) => user.userId === this.props.user._id) !== -1) return \"red\"; else return \"grey\"})()}} className=\"fa fa-heart\"></span>\r\n                                        { post['like'].length } Likes\r\n                                    </button>\r\n                                </OverlayTrigger>\r\n\r\n                                <button className=\"btn btn-sm btton_feed mr-1\" style={{backgroundColor: \"rgb(255, 255, 255, 0.4)\"}} onClick={() => this.onPostSelect(post)}><span style={{color: \"grey\"}} className=\"fa fa-comment\"></span> {this.props.comments.comments[post._id] === undefined ? ' ' : this.props.comments.comments[post._id].length } Comments</button>\r\n                                <button className=\"btn btn-sm btton_feed mr-1\" style={{backgroundColor: \"rgb(255, 255, 255, 0.4)\"}} onClick={() => {this.props.fetchTweet(post._id+'$'+post.user.username); this.props.history.push('/tweet') }}><span className=\"fa fa-info-circle\" style={{color: \"grey\"}}></span> More</button>\r\n                                {            \r\n                                    (() => {\r\n                                        if(this.state.selectedPost !== null && this.state.selectedPost === post._id){\r\n                                            return this.renderComment(post);\r\n                                        }\r\n                                    })()\r\n                                }\r\n                            </CardFooter>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(this.props.posts.isLoading){\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderNavbar()}\r\n                    <div style={{height: 600}}>\r\n                        <div style={{width: 50, height: 50, paddingTop: 150,  margin: \"0 auto\"}}>\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        } else if(this.props.posts.errMess) {\r\n            return <h4>{this.props.posts.errMess}</h4>;\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderNavbar()}\r\n                    <div style={{width: 100+'%', minHeight: 500}}>\r\n                        <Post user={this.props.user} postTweet={this.props.postTweet} />\r\n                        <StyleRoot>\r\n                            <div onClick={() => { if(this.state.errorVisible) this.setState({errorVisible: false}) }} style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeIn, 'fadeIn')}}>\r\n                                {\r\n                                    (()=>{\r\n                                        if(this.props.posts.isPosting === true){\r\n                                            return (\r\n                                                <div style={{position: \"relative\"}}>\r\n                                                    <div style={{position: \"absolute\", left: 48+\"%\", top: 40+\"%\"}}>\r\n                                                        <Spinner animation=\"border\" variant=\"dark\" />\r\n                                                    </div>\r\n                                                    <Card style={{margin: 10, opacity: 0.3}}>\r\n                                                        <CardBody className=\"p-0\">\r\n                                                            <div className=\"row m-0 p-2\">\r\n                                                                <div className=\"d-inline m-0 p-0\">\r\n                                                                    <Image roundedCircle src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\" alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 40}} />\r\n                                                                </div>\r\n                                                                <div className=\"container ml-3\" style={{width: 90+\"%\"}}>\r\n                                                                    <CardTitle className=\"mb-1 d-inline\"><strong>{this.props.user.name} </strong><span className=\"font-weight-light\">@{this.props.user.username}</span> </CardTitle><small className=\"font-weight-light d-none d-md-inline d-lg-inline\" style={{float: \"right\"}}> Date</small>\r\n                                                                    <CardText style={{textAlign: \"justify\"}}>Posting...</CardText>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </CardBody>\r\n                                                        <CardFooter className=\"p-1 m-0 bg-light\">\r\n                                                        <Button type=\"button\" className=\"mr-1\" color=\"light\" size=\"sm\"><span className=\"fa fa-heart\" style={{color: \"grey\"}}></span> 0 Likes</Button>\r\n                                                        <Button type=\"button\" className=\"mr-1\" color=\"light\" size=\"sm\"><span className=\"fa fa-comment\" style={{color: \"grey\"}}></span> Comments</Button>\r\n                                                        </CardFooter>\r\n                                                    </Card>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    })()\r\n                                }\r\n                                {feed}\r\n                            </div>\r\n                        </StyleRoot>\r\n                    </div>\r\n                    <ImgsViewer\r\n                        imgs={[{ src: this.state.imgSrc }]}\r\n                        isOpen={this.state.imgOpen}\r\n                        onClose={()=>this.setState({imgOpen: false})}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProp)(Feed));","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardText, CardHeader, ListGroupItem, ListGroup } from 'reactstrap';\r\nimport { Image } from 'react-bootstrap';\r\nimport { fetchTweet, followUser, getUserSuggestion, postUserSuggestion } from '../redux/ActionCreator';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    fetchTweet: (id) => dispatch(fetchTweet(id)),\r\n    getUserSuggestion: () => dispatch(getUserSuggestion()),\r\n    followUser: (id) => dispatch(followUser(id)),\r\n    postUserSuggestion: (id) => dispatch(postUserSuggestion(id))\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        session: state.session\r\n    }\r\n};\r\n\r\nclass Suggest extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getUserSuggestion();\r\n    }\r\n\r\n    renderSuggestion(){\r\n        const user = this.props.session.user_suggestion.map((user) => {\r\n            return (\r\n                <ListGroupItem className=\"p-2\" style={{boxShadow: \"0px 0px 0px white\", border: \"solid\", borderWidth: \"0 0 1px 0\", borderColor: \"#cfcfcf\"}}>\r\n                    <div className=\"row m-0\">\r\n                        <div className=\"m-0 mt-1 p-0 d-inline\">\r\n                            <Image roundedCircle src={user.profile_picture} alt=\"profile\" style={{maxWidth: 40}} />\r\n                        </div>\r\n                        <div className=\"d-inline ml-2\">\r\n                            <NavLink style={{color: \"black\"}} to={\"/profile/\" + user.username }><CardTitle className=\"mb-1 d-inline\"><strong>{user.name} </strong> </CardTitle></NavLink>\r\n                            <CardText className=\"font-weight-light\">@{user.username}</CardText>\r\n                        </div>\r\n                        <button className=\"btn btn-sm btton\" onClick={()=> this.props.postUserSuggestion(user._id)} style={{position: \"absolute\", right: 8, top: 8, marginTop: 10}}><strong>Follow</strong></button>\r\n                    </div>\r\n                </ListGroupItem>\r\n            );\r\n        });\r\n\r\n        return user;\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"m-2\">\r\n                <CardHeader>\r\n                    <CardTitle className=\"m-0 font-weight-bold\">Who to follow</CardTitle>\r\n                </CardHeader>\r\n                <CardBody className=\"p-2\">\r\n                    <ListGroup>\r\n                        { this.props.session.user_suggestion !== null ? this.renderSuggestion() : null }\r\n                    </ListGroup>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProp)(Suggest));","import React from 'react';\r\nimport { Card, CardText, CardBody, CardFooter, CardTitle,  Navbar, NavbarBrand, ListGroupItem } from 'reactstrap';\r\nimport { Image, Spinner, Modal } from 'react-bootstrap';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { fadeIn } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProfile, fetchProfileLikes, fetchProfileReplies, fetchTweet, followUser, fetchUserDetails } from '../redux/ActionCreator';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.profile.user,\r\n        current: state.session.user,\r\n        posts: state.profile.data,\r\n        replies: state.profile.replies,\r\n        likes: state.profile.likes,\r\n        isLoading: state.profile.isLoading,\r\n        errMess: state.profile.errMess,\r\n        following: state.profile.user.following,\r\n        fetchUser: state.profile\r\n    }\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    fetchTweet: (id) => dispatch(fetchTweet(id)),\r\n    fetchProfile: (user) => dispatch(fetchProfile(user)),\r\n    fetchProfileReplies: (user) => dispatch(fetchProfileReplies(user)),\r\n    fetchProfileLikes: (user) => dispatch(fetchProfileLikes(user)),\r\n    followUser: (id) => dispatch(followUser(id)),\r\n    fetchUserDetails: (user) => dispatch(fetchUserDetails(user))\r\n});\r\n\r\nclass Feed extends React.Component {\r\n\r\n    render(){\r\n        var feed = null;\r\n        if(this.props.isLoading){\r\n            return (\r\n                <React.Fragment>\r\n                    <div style={{height: 300}}>\r\n                        <div style={{width: 50, height: 50, paddingTop: 150,  margin: \"0 auto\"}}>\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else if(this.props.errMess) {\r\n            return <h4>{this.props.errMess}</h4>;\r\n        } else {\r\n            feed = this.props.posts.map((post) => {\r\n                return (\r\n                    <div key={post._id} style={{width: 100+\"%\"}}>\r\n                        <Card style={{margin: 10, boxShadow: \"0 2px 4px 0\", border: \"none\"}}>\r\n                        { post.repliedTo !== null ? <div style={{marginBottom: -4}}><button style={{background: \"none\", border: \"none\"}} onClick={() => {this.props.fetchTweet(post.repliedTo.split('$')[0]); } }><p style={{color: \"#737373\"}} className=\"p-0 ml-2 m-0 font-weight-light\"><small><span className=\"fa fa-reply\"></span> Replied to <strong>@{post.repliedTo.split('$')[1]}</strong></small></p></button></div> : null }\r\n                            <CardBody className=\"p-0\">\r\n                                <div className=\"row m-0 p-2\">\r\n                                    <div className=\"d-none d-md-inline d-lg-inline s-sm-none m-0 mt-1 p-0\">\r\n                                        <Image roundedCircle src={this.props.user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 40}} />\r\n                                    </div>\r\n                                    <div className=\"container ml-3 p-0\" style={{width: 90+\"%\"}}>\r\n                                        <CardTitle color=\"black\" className=\"mb-1 d-inline\"><strong>{this.props.user.name} </strong><span className=\"font-weight-light\">@{this.props.user.username}</span> </CardTitle>\r\n                                        <small className=\"font-weight-light d-inline\" style={{position: \"absolute\", right: 16}}>{ (new Date().getTime() - new Date(post.createdAt).getTime())/(1000*3600*24) < 1 ? <Moment fromNow>{post.createdAt}</Moment> : <Moment format=\"LT D, MMM\">{post.createdAt}</Moment>}</small>\r\n                                        <CardText style={{textAlign: \"justify\"}}>{post.tweet}</CardText>\r\n                                    </div>\r\n                                </div>\r\n                                <CardFooter style={{backgroundColor: \"#b8f2fc\"}} className=\"p-1 m-0\">\r\n                                    <button className=\"btn btn-sm btton_feed mr-1\" style={{backgroundColor: \"rgb(255, 255, 255, 0.4)\"}} onClick={() => {this.props.fetchTweet(post._id+'$'+post.user.username); this.props.history.push('/tweet') }}><span className=\"fa fa-info-circle\" style={{color: \"grey\"}}></span> More</button>\r\n                                </CardFooter>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n\r\n        return feed;\r\n    }\r\n}\r\n\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: 1,\r\n            show: false,\r\n            setShow: false,\r\n            showing: null,\r\n            isEditing: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchProfile(this.props.match.params.username);\r\n    }\r\n\r\n    renderNavbar() {\r\n        return (\r\n            <Navbar color=\"light\" style={{border: \"solid\", borderBottomWidth: 1, borderTopWidth: 0, borderLeftWidth: 0, borderRightWidth: 0, borderColor: \"#cfcfcf\"}}>\r\n                <NavbarBrand href=\"/\" className=\"font-weight-bold\">Profile</NavbarBrand>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n    renderProfile(){\r\n        return (\r\n            <div style={{boxShadow: \"0px 4px 4px grey\", marginBottom: 5, backgroundColor: \"#fff\"}}>\r\n                <div className=\"container-fluid\" style={{height: 120, backgroundSize: \"contain\", backgroundImage: \"url(https://d25yuvogekh0nj.cloudfront.net/2019/08/Twitter-Banner-Size-Guide-blog-banner-1250x500.png)\", position: \"relative\"}}>\r\n                    <img src={this.props.user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{boxShadow: \"0px 4px 4px grey\", borderRadius: 100 + '%', width: 125, height: 125, position: \"absolute\", bottom: -50, zIndex: 10}} />\r\n                </div>\r\n                <div className=\"container-fluid\" style={{height: 50, position: \"relative\"}}>\r\n                    {/* <button onClick={()=>this.setState({isEditing: !this.state.isEditing})} className=\"btn btn-sm btton mt-2\" style={{float: \"right\"}}><strong>Edit Profile</strong></button> */}\r\n                </div>\r\n                <div className=\"container-fluid\" style={{height: 170, border: \"solid\", borderBottomWidth: 1, borderTopWidth: 0, borderLeftWidth: 0, borderRightWidth: 0, borderColor: \"#cfcfcf\"}}>\r\n                    <div className=\"mt-2\">\r\n                        <h4 className=\"mb-0 d-inline\"><strong>{this.props.user.name}</strong></h4>\r\n                        {\r\n                            (() => {\r\n                                var user = this.props.user._id;\r\n                                var current = this.props.current._id;\r\n                                if(user !== current){\r\n                                    if([].concat(this.props.user.followers).includes(current))\r\n                                        return <button className=\"btn btn-sm btton\" onClick={()=> this.props.followUser(this.props.user._id)} style={{marginLeft: 16, marginTop: -10}}><strong>Unfollow</strong></button>;\r\n                                    else\r\n                                        return <button className=\"btn btn-sm btton\" onClick={()=> this.props.followUser(this.props.user._id)} style={{marginLeft: 16, marginTop: -10}}><strong>Follow</strong></button>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </div>\r\n                    \r\n                    <p className=\"font-weight-light mb-2\">@{this.props.user.username}</p>\r\n                    <p className=\"mb-2\">{this.props.user.bio}</p>\r\n                    <div className=\"mb-2\">\r\n                        <p style={{cursor: \"pointer\"}} onClick={()=>{this.setState({show: true, showing: 1}); this.props.fetchUserDetails(this.props.user.following)}} className=\"d-inline\">Following <strong>{[].concat(this.props.user.following).length}</strong></p>\r\n                        <p style={{cursor: \"pointer\"}} onClick={()=>{this.setState({show: true, showing: 2}); this.props.fetchUserDetails(this.props.user.followers)}} className=\"ml-3 d-inline\">Followers <strong>{[].concat(this.props.user.followers).length}</strong></p>\r\n                    </div>\r\n                    <p style={{color: \"black\"}}><i className=\"fa fa-map-marker\"></i> {this.props.user.location} <i className=\"fa fa-link ml-2\"></i> <a href={this.props.user.name}>{this.props.user.link}</a> <i className=\"fa fa-birthday-cake ml-2\"></i> {this.props.user.dob} <i className=\"fa fa-calendar ml-2\"></i> Joined <Moment format=\"DD MMM, YYYY\">{this.props.user.joined}</Moment></p>                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderEdit() {\r\n        return (\r\n            <LocalForm>\r\n            <div style={{boxShadow: \"0px 4px 4px grey\", marginBottom: 5, backgroundColor: \"#fff\"}}>\r\n                <div className=\"container-fluid\" style={{height: 120, backgroundSize: \"contain\", backgroundImage: \"url(https://vignette.wikia.nocookie.net/crayonshinchan/images/1/14/-%EB%AA%A8%EC%97%90-Raws-_Crayon_Shin-chan_-SP78_%28KSB_1280x720_x264_AAC%29.mp4_snapshot_09.43_-2017.03.24_21.20.16-.jpg/revision/latest?cb=20170325070000)\", position: \"relative\"}}>\r\n                    <img src={this.props.user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{boxShadow: \"0px 4px 4px grey\", borderRadius: 100 + '%', width: 125, height: 125, position: \"absolute\", bottom: -50, zIndex: 10}} />\r\n                </div>\r\n                <div className=\"container-fluid\" style={{height: 50, position: \"relative\"}}>\r\n                    <button className=\"btn btn-sm btton mt-2\" style={{float: \"right\"}}><strong>Save Profile</strong></button>\r\n                </div>\r\n                <div className=\"container-fluid\" style={{height: 170, border: \"solid\", borderBottomWidth: 1, borderTopWidth: 0, borderLeftWidth: 0, borderRightWidth: 0, borderColor: \"#cfcfcf\"}}>\r\n                    <div className=\"mt-2\">\r\n                        <Control.text model=\".name\" name=\"name\" id=\"name\" className=\"mb-0 d-inline\" style={{fontSize: 24, border: 'none', fontWeight: \"bold\"}} placeholder={this.props.user.name}/>\r\n                        {\r\n                            (() => {\r\n                                var user = this.props.user._id;\r\n                                var current = this.props.current._id;\r\n                                if(user !== current){\r\n                                    if([].concat(this.props.user.followers).includes(current))\r\n                                        return <button className=\"btn btn-sm btton\" onClick={()=> this.props.followUser(this.props.user._id)} style={{marginLeft: 16, marginTop: -10}}><strong>Unfollow</strong></button>;\r\n                                    else\r\n                                        return <button className=\"btn btn-sm btton\" onClick={()=> this.props.followUser(this.props.user._id)} style={{marginLeft: 16, marginTop: -10}}><strong>Follow</strong></button>;\r\n                                }\r\n                            })()\r\n                        }\r\n                    </div>\r\n                    \r\n                    <p className=\"font-weight-light mb-2\">@{this.props.user.username}</p>\r\n                    <p className=\"mb-2\">{this.props.user.bio}</p>\r\n                    <div className=\"mb-2\">\r\n                        <p style={{cursor: \"pointer\"}} onClick={()=>{this.setState({show: true, showing: 1}); this.props.fetchUserDetails(this.props.user.following)}} className=\"d-inline\">Following <strong>{[].concat(this.props.user.following).length}</strong></p>\r\n                        <p style={{cursor: \"pointer\"}} onClick={()=>{this.setState({show: true, showing: 2}); this.props.fetchUserDetails(this.props.user.followers)}} className=\"ml-3 d-inline\">Followers <strong>{[].concat(this.props.user.followers).length}</strong></p>\r\n                    </div>\r\n                    <p style={{color: \"black\"}}><i className=\"fa fa-map-marker\"></i> {this.props.user.location} <i className=\"fa fa-link ml-2\"></i> <a href={this.props.user.name}>{this.props.user.link}</a> <i className=\"fa fa-birthday-cake ml-2\"></i> {this.props.user.dob} <i className=\"fa fa-calendar ml-2\"></i> Joined <Moment format=\"DD MMM, YYYY\">{this.props.user.joined}</Moment></p>                    \r\n                </div>\r\n            </div>\r\n            </LocalForm>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: 100+'%', minHeight: 600}}>\r\n                {this.renderNavbar()}\r\n                { this.props.isLoading !== 1 && this.state.isEditing === false ? this.renderProfile() : null}\r\n                { this.props.isLoading !== 1 && this.state.isEditing ? this.renderEdit() : null}\r\n                <div className=\"container-fluid p-0\" style={{boxShadow: \"0px 4px 4px grey\"}} >\r\n                    <ul className=\"nav nav-fill\" style={{backgroundColor: \"#78e2ff\"}}>\r\n                        <li style={{cursor: \"pointer\"}} onClick={() => this.setState({selected: 1})} className=\"nav-item\">\r\n                            <p className=\"nav-link m-0\" style={ this.state.selected === 1 ? {border: \"solid\", borderWidth: \"0 0 3px 0\", borderColor: \"#00189e\", color: \"#000\", fontWeight: \"bolder\"} : {color: \"#2b2b2b\"}}>Tweets</p>\r\n                        </li>\r\n                        <li style={{cursor: \"pointer\"}} onClick={() => { this.setState({selected: 2}); if(this.props.replies === null) this.props.fetchProfileReplies(this.props.match.params.username)}} className=\"nav-item\">\r\n                            <p className=\"nav-link m-0\" style={ this.state.selected === 2 ? {border: \"solid\", borderWidth: \"0 0 3px 0\", borderColor: \"#00189e\", color: \"#000\", fontWeight: \"bolder\"} : {color: \"#2b2b2b\"}}>Replies</p>\r\n                        </li>\r\n                        <li style={{cursor: \"pointer\"}} onClick={() => {this.setState({selected: 3}); if(this.props.likes === null) this.props.fetchProfileLikes(this.props.match.params.username);}} className=\"nav-item\">\r\n                            <p className=\"nav-link m-0\" style={ this.state.selected === 3 ? {border: \"solid\", borderWidth: \"0 0 3px 0\", borderColor: \"#00189e\", color: \"#000\", fontWeight: \"bolder\"} : {color: \"#2b2b2b\"}}>Likes</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                \r\n                <div style={{width: 100+'%'}}>\r\n                    <StyleRoot>\r\n                        <div style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeIn, 'fadeIn')}}>\r\n                            {\r\n                                (() => {\r\n                                    if(this.state.selected === 1 && this.props.posts !== null)\r\n                                        return (\r\n                                            <div style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeIn, 'fadeIn')}}>\r\n                                                <Feed user={this.props.user} posts={this.props.posts} isLoading={this.props.isLoading} fetchTweet={this.props.fetchTweet} history={this.props.history}/>\r\n                                            </div>\r\n                                        )\r\n                                    else if(this.state.selected === 2 && this.props.replies !== null)\r\n                                        return (\r\n                                            <div style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeIn, 'fadeIn')}}>\r\n                                                <Feed user={this.props.user} posts={this.props.replies} isLoading={this.props.isLoading} fetchTweet={this.props.fetchTweet} history={this.props.history}/>\r\n                                            </div>\r\n                                        )\r\n                                        \r\n                                    else if(this.state.selected === 3 && this.props.likes !== null)\r\n                                        return (\r\n                                            <div style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeIn, 'fadeIn')}}>\r\n                                                <Feed user={this.props.user} posts={this.props.likes} isLoading={this.props.isLoading} fetchTweet={this.props.fetchTweet} history={this.props.history}/>\r\n                                            </div>\r\n                                        )\r\n                                })()\r\n                            }\r\n                        </div>\r\n                    </StyleRoot>\r\n                </div>\r\n\r\n                <Modal show={this.state.show} onHide={()=> this.setState({show: false})} centered>\r\n                    {\r\n                        (() => {\r\n                            if(this.state.showing === 1 && this.props.fetchUser.fetchUser === false){\r\n                                const user = this.props.fetchUser.fetchedUser.map((user) => {\r\n                                    return (\r\n                                        <ListGroupItem className=\"p-2\" style={{boxShadow: \"0px 0px 0px white\", border: \"solid\", borderWidth: \"0 0 1px 0\", borderColor: \"#cfcfcf\"}}>\r\n                                            <div className=\"row m-0\">\r\n                                                <div className=\"m-0 mt-1 p-0 d-inline\">\r\n                                                    <Image roundedCircle src={user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 40}} />\r\n                                                </div>\r\n                                                <div className=\"d-inline ml-2\">\r\n                                                    <NavLink style={{color: \"black\"}} to={\"/profile/\" + user.username }><CardTitle className=\"mb-1 d-inline\"><strong>{user.name} </strong> </CardTitle></NavLink>\r\n                                                    <CardText className=\"font-weight-light\">@{user.username}</CardText>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ListGroupItem>\r\n                                    );\r\n                                });\r\n                        \r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Following</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body style={{minHeight: 300}}>\r\n                                            {user}\r\n                                        </Modal.Body>\r\n                                    </React.Fragment>\r\n                                )\r\n                            } else if(this.state.showing === 2 && this.props.fetchUser.fetchUser === false){\r\n                                const user = this.props.fetchUser.fetchedUser.map((user) => {\r\n                                    return (\r\n                                        <ListGroupItem className=\"p-2\" style={{boxShadow: \"0px 0px 0px white\", border: \"solid\", borderWidth: \"0 0 1px 0\", borderColor: \"#cfcfcf\"}}>\r\n                                            <div className=\"row m-0\">\r\n                                                <div className=\"m-0 mt-1 p-0 d-inline\">\r\n                                                    <Image roundedCircle src={user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 40}} />\r\n                                                </div>\r\n                                                <div className=\"d-inline ml-2\">\r\n                                                    <NavLink style={{color: \"black\"}} to={\"/profile/\" + user.username }><CardTitle className=\"mb-1 d-inline\"><strong>{user.name} </strong> </CardTitle></NavLink>\r\n                                                    <CardText className=\"font-weight-light\">@{user.username}</CardText>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ListGroupItem>\r\n                                    );\r\n                                });\r\n                        \r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Followers</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body style={{minHeight: 300}}>\r\n                                            {user}\r\n                                        </Modal.Body>\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                        })()\r\n                    }\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProp)(Profile));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport  { Card, CardText, CardBody, CardTitle, CardFooter, ListGroup, ListGroupItem,\r\n        InputGroup, Navbar, NavbarBrand } from 'reactstrap';\r\nimport { Image, Spinner } from 'react-bootstrap';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { fadeInDown, fadeIn } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport Moment from 'react-moment';\r\nimport { __postLike, __postComment, fetchTweet } from '../redux/ActionCreator';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errMess: state.tweet.errMess,\r\n        isLoading: state.tweet.isLoading,\r\n        post: state.tweet.post,\r\n        comments: state.tweet.comments,\r\n        user: state.session.user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    fetchTweet: (id) => dispatch(fetchTweet(id)),\r\n    __postComment: (postId, comment) => dispatch(__postComment(postId, comment)),\r\n    __postLike: (postId) => dispatch(__postLike(postId))\r\n});\r\n\r\nclass Tweet extends React.Component {\r\n    renderComment() {\r\n        var comments = null;\r\n        if(this.props.comments.length !== 0){\r\n            comments = this.props.comments.map((comment) => {\r\n                return (\r\n                    <StyleRoot>\r\n                        <div  key={comment._id} style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeInDown, 'fadeInDown')}}>\r\n                            <ListGroupItem className=\"comment p-2 mt-1 mb-1\" style={{border: \"none\", borderRadius: 10}}>\r\n                                <div className=\"row m-0\">\r\n                                    <div className=\"col-1 m-0 p-0\">\r\n                                        <Image roundedCircle src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\" alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 40}} />\r\n                                    </div>\r\n                                    <div onClick={() =>{ this.props.fetchTweet(comment._id+'$'+comment.user.username)}} className=\"col-11\">\r\n                                        <CardTitle className=\"mb-1 d-inline\"><strong>{comment.user.name} </strong><span className=\"font-weight-light\">@{comment.user.username}</span></CardTitle>\r\n                                        <small className=\"font-weight-light d-inline\" style={{position: \"absolute\", right: 16}}>{ (new Date().getTime() - new Date(comment.createdAt).getTime())/(1000*3600*24) < 1 ? <Moment fromNow>{comment.createdAt}</Moment> : <Moment format=\"LT D, MMM\">{comment.createdAt}</Moment>}</small>\r\n                                        <CardText>{comment.tweet}</CardText>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </ListGroupItem>    \r\n                        </div>\r\n                    </StyleRoot>\r\n                );\r\n            });\r\n        }\r\n        \r\n        return (\r\n            <div className=\"pl-1 pr-1 pb-1 pt-0\">\r\n                <LocalForm model={this.props.post._id+\"comment\"} onSubmit={(values) => this.props.__postComment(this.props.post._id+'$'+this.props.post.user.username, values.comment.slice(0,256))}>\r\n                    <div class=\"container commentbar mt-2\" style={{border: \"none\", borderRadius: 30, padding: 0, backgroundColor: \"rgb(255, 255, 255, 0.7)\"}} >\r\n                        <InputGroup>\r\n                            <Control.text model=\".comment\" name=\"comment\" id=\"comment\" className=\"search-query form-control noHover\" style={{border: \"none\", borderRadius: 30, marginLeft: 0, backgroundColor: \"rgb(255, 255, 255, 0)\"}}/>\r\n                            <div style={{backgroundColor: \"rgb(255, 255, 255, 0)\", borderTopRightRadius:\"30px\", borderBottomRightRadius:\"30px\"}}>\r\n                                <span><Control.reset className=\"btn bttnx btn-sm block pl-2 pr-2\" style={{border: \"none\", paddingTop: 9, paddingBottom: 9}} model={this.props.post._id+\"comment\"} type=\"reset\"><i className=\"fa fa-times-circle\"></i></Control.reset></span>\r\n                                <span><button type=\"submit\" class=\"btn bttn btn-xs pl-2 pr-2 mr-2\" style={{border: \"none\", paddingTop: 6, paddingBottom: 6}}><i class=\"fa fa-paper-plane\"></i></button> </span>\r\n                            </div>\r\n                            </InputGroup>\r\n                    </div>\r\n                </LocalForm>\r\n\r\n                <ListGroup className=\"pt-1\"> \r\n                    {comments}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderNavbar() {\r\n        return (\r\n            <Navbar color=\"light\" style={{border: \"solid\", borderBottomWidth: 1, borderTopWidth: 0, borderLeftWidth: 0, borderRightWidth: 0, borderColor: \"#cfcfcf\"}}>\r\n                <NavbarBrand href=\"/\" className=\"font-weight-bold\">Tweet</NavbarBrand>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.props.isLoading){\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderNavbar()}\r\n                    <div style={{height: 600}}>\r\n                        <div style={{width: 50, height: 50, paddingTop: 150,  margin: \"0 auto\"}}>\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        } else if(this.props.errMess) {\r\n            return <h4>{this.props.errMess}</h4>;\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderNavbar()}\r\n                    <div style={{width: 100+'%', minHeight: 500}}>\r\n                        <StyleRoot>\r\n                            <div style={{animation: 'x 0.8s', animationName: Radium.keyframes(fadeIn, 'fadeIn')}}>\r\n                                <Card style={{margin: 10, boxShadow: \"0 2px 4px 0\", border: \"none\"}}>\r\n                                    <div>{ this.props.post.repliedTo !== null ? <button style={{background: \"none\", border: \"none\"}} onClick={() => {this.props.fetchTweet(this.props.post.repliedTo.split('$')[0]); } }><p style={{color: \"#737373\"}} className=\"p-0 ml-2 m-0 font-weight-light\"><small><span className=\"fa fa-reply\"></span> Replied to <strong>@{this.props.post.repliedTo.split('$')[1]}</strong></small></p></button> : null }</div>\r\n                                    <CardBody className=\"p-0\">\r\n                                        <div className=\"row m-0 p-2\">\r\n                                            <div className=\"col-1 m-0 p-0\">\r\n                                                <Image roundedCircle src={this.props.post.user.profile_picture} alt=\"profile\" className=\"img-thumbnail\" style={{maxWidth: 50}} />\r\n                                            </div>\r\n                                            <div className=\"col-11\">\r\n                                                <NavLink style={{color: \"black\"}} to={\"/profile/\" + this.props.post.user.username }><CardTitle className=\"mb-1 d-inline\"><strong>{this.props.post.user.name} </strong></CardTitle></NavLink>\r\n                                                <CardTitle className=\"font-weight-light mb-1\">@{this.props.post.user.username}</CardTitle>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"container\">\r\n                                            <CardText className=\"lead pb-2 mb-0\" style={{textAlign: \"justify\", fontSize: 20}}>{this.props.post.tweet}</CardText>\r\n                                            { this.props.post.picture !== null ? <div className=\"container m-1 mb-2\"><Image rounded src={this.props.post.picture} alt=\"post\" className=\"mx-auto d-block\" style={{maxWidth: 500, maxHeight: 500}}/></div> : null }\r\n                                            <div className=\"mb-2\" style={{border: \"solid\", borderWidth: \"1px 0 0 0\", borderColor: \"#cfcfcf\"}}><small><Moment format=\"LT D MMM, YYYY\">{this.props.post.createdAt}</Moment></small></div>\r\n                                        </div>\r\n                                        \r\n                                        <CardFooter style={{backgroundColor: \"#b8f2fc\"}} className=\"p-1 m-0\">\r\n                                            <button className=\"btn btn-sm btton_feed mr-1\" style={{backgroundColor: \"rgb(255, 255, 255, 0.4)\"}}  onClick={() => this.props.__postLike(this.props.post._id)}>\r\n                                                <span style={{paddingRight: 4, color: (() =>{ if(this.props.post['like'].length !== 0 && this.props.post.like.findIndex((user) => user.userId === this.props.user._id) !== -1) return \"red\"; else return \"grey\"})()}} className=\"fa fa-heart\"></span>\r\n                                                { this.props.post['like'].length } Likes\r\n                                            </button>\r\n\r\n                                            <button className=\"btn btn-sm btton_feed mr-1\" style={{backgroundColor: \"rgb(255, 255, 255, 0.4)\"}}><span style={{color: \"grey\"}} className=\"fa fa-comment\"></span> {this.props.comments.length } Comments</button>\r\n                                            {this.renderComment()}\r\n                                        </CardFooter>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </div>\r\n                        </StyleRoot>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProp)(Tweet));","import React from 'react';\r\nimport Feed from './FeedComponent';\r\nimport Suggest from './SuggestionComponet';\r\nimport Profile from './ProfileComponent';\r\nimport Tweet from './TweetComponent';\r\nimport { Link, Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postTweet, postComment, postLike, getUserSuggestion, logoutUser } from '../redux/ActionCreator';\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    postTweet: (tweet, username, name) => dispatch(postTweet(tweet, username, name)),\r\n    postComment: (postID, name, comment) => dispatch(postComment(postID, name, comment)),\r\n    postLike: (postID) => dispatch(postLike(postID)),\r\n    getUserSuggestion: () => dispatch(getUserSuggestion()),\r\n    logoutUser: () => dispatch(logoutUser())\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        login: state.login,\r\n        session: state.session\r\n    }\r\n};\r\n\r\nclass Main extends React.Component {\r\n\r\n    renderSidebar() {\r\n        return (\r\n            <div style={{position: \"fixed\"}}>\r\n                <div className=\"p-2 pb-4\">\r\n                    <i className=\"fa fa-twitter fa-3x\" style={{color: \"#03b1fc\"}}></i>\r\n                </div>\r\n                <div className=\"p-3\">\r\n                    <Link to=\"/home\" ><i className=\"fa fa-home fa-2x\"></i></Link>\r\n                </div>\r\n                <div className=\"p-3\">\r\n                    <Link to={\"/profile/\" + this.props.session.user.username }><i className=\"fa fa-user-circle fa-2x\"></i></Link>\r\n                </div>\r\n                <div className=\"p-3\">\r\n                    <div onClick={()=> this.props.logoutUser()}><i className=\"fa fa-sign-out fa-2x\" style={{cursor: \"pointer\", color: \"blue\"}}></i></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderFooter(){\r\n        return (\r\n            <div className=\"container-fluid\" style={{height: 50, textAlign: \"center\", backgroundColor: \"#ededed\", border: \"solid\", borderBottomWidth: 0, borderTopWidth: 1,\r\n                                        borderLeftWidth: 0, borderRightWidth: 0, borderColor: \"#cfcfcf\"}}>\r\n                <p className='m-2' style={{color: '#7a7a7a'}}>Made with <i className=\"fa fa-heart\"></i> by <i> Hriddhi.</i></p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-1 col-md-1 p-0 d-none d-md-block d-lg-block\" style={{}}> \r\n                            {this.renderSidebar()}\r\n                        </div>\r\n                        <div className=\"col-md-11 col-lg-7 p-0\" style={{backgroundColor: \"#defaff\", border: \"solid\", borderBottomWidth: 0, borderTopWidth: 0, borderLeftWidth: 1, borderRightWidth: 1, borderColor: \"#cfcfcf\"}}>\r\n                            <Switch>\r\n                                <Route exact path=\"/home\" component={() => <Feed postTweet={this.props.postTweet} postComment={this.props.postComment} postLike={this.props.postLike} />}/>\r\n                                <Route exact path=\"/profile/:username\" component={(props) => <Profile {...props}/>}/>  \r\n                                <Route exact path=\"/tweet\" component={() => <Tweet/>}/>\r\n                            </Switch>\r\n                        </div>\r\n                        <div className=\"col-lg-4 p-0 d-none d-lg-block \">\r\n                            <Suggest />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.renderFooter()}\r\n                <Redirect to='/home' />\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n//<Redirect to=\"/login\"/>\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProp)(Main));","import React from 'react';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/ActionCreator';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        session: state.session\r\n    }\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    loginUser: (user) => dispatch(loginUser(user))\r\n});\r\n\r\nclass Login extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if(this.props.session.session)\r\n            this.props.history.replace('/home');\r\n    }\r\n\r\n    handleLogin(values){\r\n        //alert(JSON.stringify(values));\r\n        this.props.loginUser(values);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" id=\"Reserve-card\">\r\n                <div className=\"row justify-content-center row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"row\">\r\n                            <h5 className=\"text-blue pl-3 pt-4 pb-1\" style={{color: \"#00acee\"}}><i className=\"fa fa-twitter fa-2x\"></i> NOT-Twitter</h5>\r\n                        </div>\r\n                        <div className=\"card\" style={{boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\"}}>\r\n                            <div className=\"card-body p-0\">\r\n                                <LocalForm onSubmit={(values) => this.handleLogin(values)} className=\"ml-4 mr-4 pt-3 card-text\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label style={{color: \"#055f83\"}}><b>Username</b></label>\r\n                                            <div className=\"input-group\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\" style={{color: \"#055f83\"}}> <i className=\"fa fa-at\"></i></span>\r\n                                                </div>\r\n                                                <Control.text model=\".username\" name=\"username\" id=\"username\" className=\"form-control\" placeholder=\"Enter Username\"/>\r\n                                            </div>\r\n                                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your details with anyone else.</small>\r\n                                        </div>    \r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label style={{color: \"#055f83\"}}><b>Password</b></label>\r\n                                            <div className=\"input-group\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\" style={{color: \"#055f83\"}}> <i className=\"fa fa-unlock\"></i></span>\r\n                                                </div>\r\n                                                <Control.text type=\"password\" model=\".password\" name=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Enter Password\"/>\r\n                                            </div>    \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-outline-primary btn-sm\">Login</button>\r\n                                    </div>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <NavLink style={{fontWeight: \"bold\"}} to='/register'>Tired of twitter? Join us!</NavLink>\r\n                                    </div>\r\n                                </LocalForm>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProp)(Login));","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/ActionCreator';\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    registerUser: (user) => dispatch(registerUser(user))\r\n});\r\n\r\nclass Registration extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: false,\r\n            image : null,\r\n            file: null\r\n        }\r\n\r\n        this.handleImageChange = this.handleImageChange.bind(this)\r\n    }\r\n\r\n    handleRegistration(values){\r\n        var formData = new FormData();\r\n        formData.append('username', values.username);\r\n        formData.append('password', values.password);\r\n        formData.append('email', values.email);\r\n        formData.append('name', values.firstname + \" \" + values.lastname);\r\n        formData.append('dob', values.dob);\r\n        formData.append('location', values.location);\r\n        formData.append('bio', values.bio)\r\n        if(this.state.file !== null)\r\n            formData.append('image', this.state.file);\r\n\r\n        this.props.registerUser(formData);\r\n    }\r\n\r\n    handleImageChange(event) {\r\n        this.setState({\r\n          image: URL.createObjectURL(event.target.files[0]),\r\n          file: event.target.files[0]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LocalForm encType=\"multipart/form-data\" onSubmit={(values) => this.handleRegistration(values)}>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center row-content\">\r\n                        <div className=\"col-lg-6 col-md-8 col-sm-9\">\r\n                            <div className=\"row\">\r\n                                <h5 className=\"text-blue pl-3 pt-4 pb-1\" style={{color: \"#00acee\"}}><i className=\"fa fa-twitter fa-2x\"></i> NOT-Twitter</h5>\r\n                            </div>\r\n                            <div className=\"card\" style={{boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\"}}>\r\n                                <div className=\"card-body p-0\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"container-fluid p-3 d-inline\" style={{width: 40+\"%\"}}>\r\n                                            <div style={{position: \"relative\"}}>\r\n                                                <img src={this.state.image !== null ? this.state.image : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"} alt=\"user_profile\" className=\"p-1\" style={{width: \"100%\" , borderRadius: \"50%\"}}/> \r\n                                                <div style={{position: \"absolute\", bottom: \"8%\", right: \"10%\"}}>\r\n                                                    <button type=\"button\" className=\"btn btn-secondary btn-sm p-0\" style={{width: \"30px\", height: \"30px\", borderRadius: \"50%\", paddingTop: -4}}>\r\n                                                        <Control.file onChange={this.handleImageChange} model=\".image\" name=\"image\" id=\"image\" className=\"form-control p-0\" style={{opacity: 0, height: 30, width: 30, position: \"absolute\", marginTop: -5, marginLeft: -1}}/>\r\n                                                        <small style={{zIndex: 1, marginTop: -2}}><i className=\"fa fa-edit\"></i></small>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"container-fluid d-inline pl-0 ml-0\" style={{width: 50+\"%\"}}>\r\n                                            <div className=\"pt-3 card-text\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"registrationForm\" style={{color:  \"#055f83\"}}><b>Username</b></label>\r\n                                                    <div className=\"input-group\">\r\n                                                        <div className=\"input-group-prepend\">\r\n                                                            <span className=\"input-group-text\" style={{color: \"#055f83\"}}> <i className=\"fa fa-at\"></i></span>\r\n                                                        </div>\r\n                                                        <Control.text model=\".username\" name=\"username\" id=\"username\" className=\"form-control\" placeholder=\"Username\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label for=\"registrationForm\" style={{color:  \"#055f83\"}}><b>Password</b></label>\r\n                                                    <div className=\"input-group\">\r\n                                                        <div className=\"input-group-prepend\">\r\n                                                            <span className=\"input-group-text\" style={{color: \"#055f83\"}}> <i className=\"fa fa-lock\"></i></span>\r\n                                                        </div>\r\n                                                        <Control.text model=\".password\" name=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"ml-4 mr-4 pt-1 card-text\">\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"registrationForm\" style={{color: \"#055f83\"}}><b>Name</b></label>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"col-6\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <div className=\"input-group-prepend\">\r\n                                                            <span className=\"input-group-text\" style={{color:  \"#055f83\"}}> <i className=\"fa fa-user\"></i></span>\r\n                                                        </div>\r\n                                                        <Control.text model=\".firstname\" name=\"name\" id=\"name\" className=\"form-control\" placeholder=\"First Name\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col\">\r\n                                                    <Control.text model=\".lastname\" name=\"name\" id=\"name\" className=\"form-control\" placeholder=\"Last Name\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                \r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"exampleInputEmail1\" style={{color: \"#055f83\"}}><b>Email address</b></label>\r\n                                            <div className=\"input-group\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\" style={{color: \"#055f83\"}}> <i className=\"fa fa-envelope\"></i></span>\r\n                                                </div>\r\n                                                <Control.text model=\".email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email\" />\r\n                                            </div>\r\n                                        </div>    \r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"registrationForm\" style={{color: \"#055f83\"}}><b>Date of Birth</b></label>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"col-7\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <div className=\"input-group-prepend\">\r\n                                                            <span className=\"input-group-text\" style={{color: \"#055f83\"}}> <i className=\"fa fa-calendar\"></i> </span>\r\n                                                        </div>\r\n                                                        <Control.text type=\"date\" model=\".dob\" name=\"dob\" id=\"dob\" className=\"form-control\"placeholder=\"dob\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>         \r\n                                        </div>\r\n                \r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"registrationForm\" style={{color: \"#055f83\"}}><b>Location</b></label>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"col-7\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <div className=\"input-group-prepend\">\r\n                                                            <span className=\"input-group-text\" style={{color: \"#055f83\"}}> <i className=\"fa fa-map-marker\"></i> </span>\r\n                                                        </div>\r\n                                                        <Control.text model=\".location\" name=\"location\" id=\"location\" className=\"form-control\" placeholder=\"Location\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                            \r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"registrationForm\" style={{color: \"#055f83\"}}><b>Bio.</b></label>\r\n                                            <Control.textarea model=\".bio\" name=\"bio\" id=\"bio\" className=\"form-control\" rows=\"2\" />\r\n                                        </div>\r\n                \r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"checkbox\"/>\r\n                                            <label className=\"form-check-label\">\r\n                                                <p onClick={()=>this.setState({show: true})} style={{marginLeft: 8, color: \"#00acee\", cursor: \"pointer\"}}> Agree to terms and conditions</p>\r\n                                            </label>\r\n                                        </div>\r\n                \r\n                                        <div className=\"form-group text-center\">\r\n                                            <Button type=\"submit\" size=\"sm\">Register</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n                \r\n                <Modal show={this.state.show} onHide={()=>this.setState({show: false})} centered>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <div style={{position: \"absolute\", bottom: \"75%\"}}>\r\n                                <img src=\"https://pngimg.com/uploads/twitter/twitter_PNG28.png\" alt=\"twitter_logo\" style={{width: \"30%\", borderStyle: \"solid\", border: \"white\", borderRadius: \"2px\"}}/>\r\n                            </div>\r\n                            <div className=\"text-center\" style={{marginTop: \"50px\"}}>\r\n                                <h3 style={{color: \"#00acee\"}}>Surprise Surprise</h3>\r\n                                <h6 style={{marginTop: \"6%\"}}>We don't have any T&C</h6>\r\n                                <h4 className=\"\" style={{color: \"#00acee\", marginTop: \"20px\"}}><i className=\"far fa-smile-wink\"></i></h4>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer className=\"p-0\">\r\n                        <div className=\"container-fluid p-0 m-0\" style={{height: 50, textAlign: \"center\", backgroundColor: \"#ededed\", border: \"solid\", borderWidth: \"1px 0 0 0\", borderColor: \"#cfcfcf\"}}>\r\n                            <p className='m-2' style={{color: '#7a7a7a'}}>Made with <i className=\"fa fa-heart\"></i> by Adrita.</p>\r\n                        </div>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </LocalForm>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProp)(Registration));","import React from 'react';\r\nimport Main from './MainComponent';\r\nimport Login from './LoginComponent';\r\nimport Registration from './RegistrationComponent';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      session: state.session\r\n  }\r\n};\r\n\r\nclass Router extends React.Component {\r\n\r\n  render() {\r\n      return (\r\n        <React.Fragment>\r\n            {\r\n                (() => {\r\n                if(this.props.session.session)\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Main/>\r\n                        </React.Fragment>\r\n                    );\r\n                else {\r\n                    return <Redirect to=\"/login\"/>;\r\n                } \r\n                })()\r\n            }\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={()=> <Login />} />\r\n                <Route exact path=\"/register\" component={() => <Registration />}/>\r\n            </Switch>\r\n        </React.Fragment>   \r\n      );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Router);","import * as ActionTypes from './ActionTypes';\r\nimport produce from 'immer';\r\n\r\nexport const Posts = produce((draft = {\r\n    isLoading: false,\r\n    isPosting: null,\r\n    errMess: null,\r\n    posts: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.POST_LOADING:\r\n            draft.isLoading = true;\r\n            draft.errMess = null;\r\n            draft.posts = [];\r\n            return;\r\n\r\n        case ActionTypes.POST_FAILED:\r\n            draft.isLoading = false;\r\n            draft.errMess = action.payload;\r\n            draft.posts = [];\r\n            return;\r\n\r\n        case ActionTypes.POST_SUCCESS:\r\n            draft.isLoading = false;\r\n            draft.errMess = null;\r\n            draft.posts = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.POST_TWEET:\r\n            draft.isPosting = true;\r\n            return;\r\n\r\n        case ActionTypes.POST_TWEET_SUCCESS:\r\n            draft.isPosting = false;\r\n            draft.errMess = null;\r\n            draft.posts.unshift(action.payload);\r\n            return;\r\n\r\n        case ActionTypes.POST_TWEET_FAILED:\r\n            draft.isPosting = false;\r\n            draft.errMess = action.payload;\r\n            return;\r\n        \r\n        case ActionTypes.POST_LIKE_LOADING: \r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.POST_LIKE_FAILED:\r\n            draft.errMess = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.POST_LIKE_SUCCESS:\r\n            draft.errMess = null;\r\n            var i = draft.posts.findIndex((post) => action['postId'] === (post._id));\r\n            draft.posts[i].like = action.payload;\r\n            return;\r\n\r\n        default:\r\n            return draft;\r\n    }\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport produce from 'immer';\r\n\r\nexport const Comments = produce((draft = \r\n    {\r\n        isLoading: false,\r\n        isPosting: false,\r\n        errMess: null,\r\n        comments: {}\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.COMMENT_LOADING:\r\n            draft.isLoading = true;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.COMMENT_FAILED:\r\n            draft.isLoading = false;\r\n            draft.errMess = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.COMMENT_SUCCESS:\r\n            draft.isLoading = false;\r\n            draft.errMess = null;\r\n            if(action.payload[0] === undefined)\r\n                return;\r\n            console.log(action.payload);\r\n            var id = action.payload[0].repliedTo.split('$');\r\n            draft.comments[id[0]] = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.POST_COMMENT_LOADING: \r\n            draft.isPosting = true;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.POST_COMMENT_FAILED:\r\n            draft.isPosting = false;\r\n            draft.errMess = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.POST_COMMENT_SUCCESS:\r\n            draft.isPosting = false;\r\n            draft.errMess = null;\r\n            var comment = action.payload;\r\n            var _id = comment.repliedTo.split('$');\r\n            if(draft.comments[_id[0]] === undefined){\r\n                draft.comments[_id[0]] = [ comment ];\r\n                return;\r\n            } else {\r\n                draft.comments[_id[0]].push(comment);\r\n                return;\r\n            }\r\n    \r\n        default:\r\n            return draft;\r\n    }\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport produce from 'immer';\r\n\r\nexport const Register = produce((draft = {\r\n    isRegistering: false,\r\n    errMess: null\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.REGISTER_USER:\r\n            draft.isRegistering = true;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.REGISTER_SUCCESS:\r\n            draft.isRegistering = false;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.REGISTER_FAILED:\r\n            draft.isRegistering = false;\r\n            draft.errMess = action.err;\r\n            return;\r\n    \r\n        default:\r\n            return draft;\r\n    }\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport produce from 'immer';\r\n\r\nexport const Login = produce((draft = {\r\n    isLoading: false,\r\n    errMess: null\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.LOGIN_USER:\r\n            draft.isLoading = true;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            draft.isLoading = false;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.LOGIN_FAILED:\r\n            draft.isLoading = false;\r\n            draft.errMess = action.payload.status + \" \" + action.payload.statusText;\r\n            return;\r\n    \r\n        default:\r\n            return draft;\r\n    }\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport produce from 'immer';\r\n\r\nexport const Tweet = produce((draft = {\r\n    isLoading: false,\r\n    commentLoading: false,\r\n    likeLoading: false,\r\n    errMess: null,\r\n    commentErr: null,\r\n    likeErr: null,\r\n    post: null,\r\n    comments: [],\r\n    likes: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.__FETCH_TWEET_LOADING:\r\n            draft.isLoading = true;\r\n            return;\r\n\r\n        case ActionTypes.__FETCH_TWEET_FAILED:\r\n            draft.isLoading = false;\r\n            draft.errMess = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.__FETCH_TWEET_SUCCESS:\r\n            draft.isLoading = false;\r\n            draft.post = action.payload.post;\r\n            draft.comments = action.payload.comment;\r\n            return;\r\n\r\n        case ActionTypes.__COMMENT_LOADING:\r\n            draft.commentLoading = true;\r\n            return;\r\n\r\n        case ActionTypes.__COMMENT_FAILED:\r\n            draft.commentLoading = false;\r\n            draft.commentErr = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.__COMMENT_SUCCESS:\r\n            draft.commentLoading = false;\r\n            draft.commentErr = null;\r\n            var comment = action.payload;\r\n            draft.comments.push(comment);\r\n            return;\r\n\r\n        case ActionTypes.__LIKE_LOADING: \r\n            draft.likeLoading = true;\r\n            draft.likeErr = null;\r\n            return;\r\n\r\n        case ActionTypes.__LIKE_FAILED:\r\n            draft.likeLoading = false;\r\n            draft.likeErr = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.__LIKE_SUCCESS:\r\n            draft.likeLoading = false;\r\n            draft.likeErr = null;\r\n            draft.post.like = action.payload;\r\n            return;\r\n\r\n        default:\r\n            return draft;\r\n    }\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport produce from 'immer';\r\n\r\nexport const Session = produce((draft = {\r\n    session: false,\r\n    token: null,\r\n    user: {\r\n        username: ''\r\n    },\r\n    errMess: null,\r\n    user_suggestion: null\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.CREATE_SESSION:\r\n            draft.session = true;\r\n            draft.token = action.payload.token;\r\n            draft.user = action.payload.user;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.DELETE_SESSION:\r\n            draft.session = false;\r\n            draft.token = null;\r\n            draft.user_suggestion = null;\r\n            draft.user = null;\r\n            return;\r\n\r\n        case ActionTypes.FETCH_USER_SUGGESTION:\r\n            draft.user_suggestion = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.POST_USER_SUGGESTION:\r\n            var i = action.payload;\r\n            var temp = draft.user_suggestion.filter((val) => i !== val._id);\r\n            console.log(temp);\r\n            draft.user_suggestion = temp;\r\n            return;\r\n    \r\n        default:\r\n            return draft;\r\n    }\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport produce from 'immer';\r\n\r\nexport const Profile = produce((draft = {\r\n    data: null,\r\n    replies: null,\r\n    likes: null,\r\n    user: {},\r\n    isLoading: false,\r\n    errMess: null,\r\n    fetchUser: false,\r\n    fetchedUser: null\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.PROFILE_LOADING:\r\n            draft.isLoading = 1;\r\n            draft.errMess = null;\r\n            draft.likes = null;\r\n            draft.replies = null;\r\n            return;\r\n\r\n        case ActionTypes.PROFILE_SUCCESS:\r\n            draft.isLoading = false;\r\n            draft.errMess = null;\r\n            draft.data = action.payload.data.reverse();\r\n            draft.user = action.payload.user;\r\n            return;\r\n\r\n        case ActionTypes.PROFILE_REPLIES_LOADING:\r\n            draft.isLoading = 2;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.PROFILE_REPLIES_SUCCESS:\r\n            draft.isLoading = false;\r\n            draft.errMess = null;\r\n            draft.replies = action.payload.replies.reverse();\r\n            return;\r\n\r\n        case ActionTypes.PROFILE_LIKES_LOADING:\r\n            draft.isLoading = 3;\r\n            draft.errMess = null;\r\n            return;\r\n\r\n        case ActionTypes.PROFILE_LIKES_SUCCESS:\r\n            draft.isLoading = false;\r\n            draft.errMess = null;\r\n            draft.likes = action.payload.likes.reverse();\r\n            return;\r\n\r\n        case ActionTypes.FOLLOW_USER:\r\n            console.log(action.payload);\r\n            draft.user.followers = action.payload;\r\n            return;\r\n\r\n        case ActionTypes.FETCH_USER_DETAIL_LOADING:\r\n            draft.fetchUser = true;\r\n            return;\r\n\r\n        case ActionTypes.FETCH_USER_DETAIL_SUCCESS:\r\n            draft.fetchedUser = action.payload;\r\n            draft.fetchUser = false;\r\n            return;\r\n    \r\n        default:\r\n            return draft;\r\n    }\r\n});","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { Posts } from './posts';\r\nimport { Comments } from './comments';\r\nimport { Register } from './registration';\r\nimport { Login } from './login'\r\nimport { Tweet } from './tweet';\r\nimport { Session } from './session'\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Profile } from './profile';\r\nimport expireReducer from 'redux-persist-expire';\r\n\r\nconst persistConfig = {\r\n    key: 'session',\r\n    storage: storage,\r\n    whitelist: ['session'],\r\n    blacklist: ['posts', 'comments', 'tweet', 'profile', 'register', 'login'],\r\n    transforms: [\r\n        expireReducer('session', {\r\n            expireSeconds: 3600 * 24 * 30 \r\n        })\r\n    ]\r\n};\r\n\r\nconst store = createStore(\r\n    persistReducer(persistConfig,\r\n        combineReducers({\r\n            posts: Posts,\r\n            comments: Comments,\r\n            tweet: Tweet,\r\n            profile: Profile,\r\n            register: Register,\r\n            login: Login,\r\n            session: Session\r\n        })\r\n    ),\r\n    applyMiddleware(thunk, logger)\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };","import React from 'react';\r\nimport Router from './components/Router';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/configureStore';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n      return (\r\n        <Provider store={store}>\r\n          <BrowserRouter>\r\n            <Router />\r\n          </BrowserRouter>\r\n        </Provider>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Moment from 'react-moment';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { enableAllPlugins } from \"immer\"\n\nenableAllPlugins();\n\nMoment.startPooledTimer();\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}